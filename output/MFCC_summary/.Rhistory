setwd("C:/Users/mk7kc/Desktop/mfcc/output")
#---------------------------------------------------------------
# Program: Plot MFCC Feature Vectors
# Author: Minah Kim
# Date: 10/1/2020
#
#
#
#---------------------------------------------------------------
setwd('C:/Users/mk7kc/Desktop/mfcc/output')
setwd("C:/Users/mk7kc/Desktop/mfcc/Katie Recording")
# Read data
# Input file generated from mfcc.m
dat <- read.csv('katie_mfcc_feature_vectors.csv',header=FALSE)
dim(dat)
# install.packages('ggplot2')
library(ggplot2)
# install.packages('tidyr')
library(tidyr)
# Get time averaged set of MFCCs for coefficients 2 - 13 (in matlab zeroth coefficient is outputted but excluded from graph)
# F0 related to pitch, provides no value in speech recognition
time_averaged_13 <- rowMeans(dat)
time_averaged_12 <- time_averaged_13[2:length(time_averaged_13)]
# time averaged SD
#install.packages('matrixStats')
library(matrixStats)
SD_13 <- rowSds(dat)
dat <- as.matrix(dat)
SD_12 <- SD_13[2:length(SD_12)]
# get the standard error of the mean
dim(dat)
dat_graph <- data.frame("MFCC Feature" = 1:12, "Coefficient" = time_averaged_12,"SD"=SD_12)
# Read data
# Input file generated from mfcc.m
dat <- read.csv('katie_mfcc_feature_vectors.csv',header=FALSE)
# install.packages('tidyr')
library(tidyr)
time_averaged_12 <- time_averaged_13[2:length(time_averaged_13)]
SD_13 <- rowSds(dat)
dat <- as.matrix(dat)
SD_12 <- SD_13[2:length(SD_12)]
dat_graph <- data.frame("MFCC Feature" = 1:12, "Coefficient" = time_averaged_12,"SD"=SD_12)
# install.packages('ggplot2')
library(ggplot2)
# Get time averaged set of MFCCs for coefficients 2 - 13 (in matlab zeroth coefficient is outputted but excluded from graph)
# F0 related to pitch, provides no value in speech recognition
time_averaged_13 <- rowMeans(dat)
# time averaged SD
#install.packages('matrixStats')
library(matrixStats)
# get the standard error of the mean
dim(dat)
dim(dat)[2]
str(dim(dat)[2])
setwd('C:/Users/mk7kc/Desktop/mfcc/output')
# Read data
# Input file generated from mfcc.m
dat <- read.csv('MFCCs_200929_1512_1_mono.csv',header=FALSE)
dim(dat)
# install.packages('ggplot2')
library(ggplot2)
# install.packages('tidyr')
library(tidyr)
# Get time averaged set of MFCCs for coefficients 2 - 13 (in matlab zeroth coefficient is outputted but excluded from graph)
# F0 related to pitch, provides no value in speech recognition
time_averaged_13 <- rowMeans(dat)
time_averaged_12 <- time_averaged_13[2:length(time_averaged_13)]
# time averaged SD
#install.packages('matrixStats')
library(matrixStats)
SD_13 <- rowSds(dat)
dat <- as.matrix(dat)
SD_12 <- SD_13[2:length(SD_12)]
# get the standard error of the mean
dim(dat)
dat_graph <- data.frame("MFCC Feature" = 1:12, "Coefficient" = time_averaged_12,"SD"=SD_12)
SD_13 <- rowSds(dat)
dat <- as.matrix(dat)
SD_12 <- SD_13[2:length(SD_12)]
SD_12 <- SD_13[2:length(SD_12)]
SD_13 <- rowSds(dat)
SD_12 <- SD_13[2:length(SD_13)]
dat_graph <- data.frame("MFCC Feature" = 1:12, "Coefficient" = time_averaged_12,"SD"=SD_12)
dat_graph$sem <- dat_graph$SD/(dim(dat)[2])
# Graph this
# also change your MFF Feature var to a factor type
dat_graph$MFCC.Feature <- factor(dat_graph$MFCC.Feature)
str(dat_graph)
theme_set(theme_classic())
ggplot(data = dat_graph, aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-sem,ymax=Coefficient+sem),position="dodge",width=.3,color="magenta",lwd=2) +
labs(title = "MFCC Feature Vectors from All Utterances by Katie", x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
filename <- sort(Sys.glob('*.csv'), decreasing = TRUE)
ggplot(data = dat_graph, aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-sem,ymax=Coefficient+sem),position="dodge",width=.3,color="magenta",lwd=2) +
labs(title = print("MFCC Feature Vectors for",filename), x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
?print
print("hi","bye")
ggplot(data = dat_graph, aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-sem,ymax=Coefficient+sem),position="dodge",width=.3,color="magenta",lwd=2) +
labs(title = paste("MFCC Feature Vectors for",filename), x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
str(dat_graph)
filename <- sort(Sys.glob('*.csv'), decreasing = TRUE)
length(filename)
for (i in filename){
assign(i,read.csv(paste0(i),as.is=TRUE))}
#---------------------------------------------------------------
# Program: Plot MFCC Feature Vectors
# Author: Minah Kim
# Date Created: 10/1/2020
# Revised: 2/28/21
# Input:
# * matlab output (csv file/s) of time averaged set of MFCC coefficients 1 - 13 saved in MFCC_summary
# Output:
# * plots for each file, saved in MFCC_plots
#---------------------------------------------------------------
setwd('C:/Users/mk7kc/Desktop/mfcc/output/MFCC_summary')
# Read data and put them into list ()
filename <- sort(Sys.glob('*.csv'), decreasing = TRUE)
myDatasets <- lapply(filename, function(i){read.csv(paste0(i),header=FALSE)})
num_dat <- length(myDatasets)
# get rid of '.csv' substring
for (i in 1:num_dat){
filename[i] <- substr(filename[i],1,nchar(filename[i])-4)
}
# Don't really need tidry and matrixStats anymore cause my revised matlab script generate the mean/sd/sem for each file
library(ggplot2)
# library(tidyr)
# library(matrixStats)
# Assign col names and get rid of first row of data (in matlab output, zeroth coefficient is outputted but excluded from being plotted)
# F0 related to pitch, provides no value in speech recognition
for (i in 1:num_dat){
myDatasets[[i]] <- myDatasets[[i]][-1,]
colnames(myDatasets[[i]]) <- c("Coefficient","SD","SEM")
myDatasets[[i]]$MFCC.Feature <- as.factor(1:12)
}
# Don't need to do these steps cause my revised matlab script generate the mean/sd/sem for each file
# time_averaged_13 <- rowMeans(dat)
# time_averaged_12 <- time_averaged_13[2:length(time_averaged_13)]
#
# # time averaged SD
# SD_13 <- rowSds(dat)
# dat <- as.matrix(dat)
# SD_12 <- SD_13[2:length(SD_13)]
#
# # standard error of the mean
# dim(dat)
# dat_graph <- data.frame("MFCC Feature" = 1:12, "Coefficient" = time_averaged_12,"SD"=SD_12)
# dat_graph$sem <- dat_graph$SD/sqrt((dim(dat)[2]))
# Plot and save as png
for (i in 1:num_dat) {
png(sprintf("/Users/mk7kc/Desktop/mfcc/output/MFCC_plots/%s.jpg", filename[i]))
theme_set(theme_classic())
plot <- ggplot(data = myDatasets[[i]], aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-SEM,ymax=Coefficient+SEM),position="dodge",width=.3,color="magenta",lwd=2) +
labs(title = paste("MFCC Feature Vectors for",filename), x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
print(plot)
dev.off()
}
plot <- ggplot(data = myDatasets[[1]], aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-SEM,ymax=Coefficient+SEM),position="dodge",width=.3,color="magenta",lwd=2) +
geom_line(myDatasets[[2]],color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[3]],color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[4]],color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[5]],color = "magenta", lty = 1, lwd=2) +
labs(title = paste("MFCC Feature Vectors for",filename), x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
theme_set(theme_classic())
plot <- ggplot(data = myDatasets[[1]], aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-SEM,ymax=Coefficient+SEM),position="dodge",width=.3,color="magenta",lwd=2) +
geom_line(myDatasets[[2]],color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[3]],color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[4]],color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[5]],color = "magenta", lty = 1, lwd=2) +
labs(title = paste("MFCC Feature Vectors for",filename), x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
plot <- ggplot(data = myDatasets[[1]], aes(x=MFCC.Feature, y = Coefficient, group = 1))+
geom_line(color = "magenta", lty = 1, lwd=2) +
geom_errorbar(aes(ymin=Coefficient-SEM,ymax=Coefficient+SEM),position="dodge",width=.3,color="magenta",lwd=2) +
geom_line(myDatasets[[2]],aes(x=MFCC.Feature, y = Coefficient, group = 1), color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[3]],aes(x=MFCC.Feature, y = Coefficient, group = 1),color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[4]],aes(x=MFCC.Feature, y = Coefficient, group = 1),color = "magenta", lty = 1, lwd=2) +
geom_line(myDatasets[[5]],aes(x=MFCC.Feature, y = Coefficient, group = 1),color = "magenta", lty = 1, lwd=2) +
labs(title = paste("MFCC Feature Vectors for",filename), x = "MFCC Feature", y = "Coefficient (weight)")+
scale_x_discrete(breaks=seq(1,12,by=2),labels = c("1","3","5","7","9","11"))
myDatasets[[i]][,2]
myDatasets[[i]]
